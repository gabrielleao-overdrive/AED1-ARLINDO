#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ITENS 10000
#define MAX_CONTA 1000

typedef struct equacao {
    char conta[MAX_CONTA];
    struct equacao *seg;
} equacao;


void adicionar(equacao **lista, char *conta) {
    equacao *novo = (equacao*) malloc(sizeof(equacao));
    strcpy(novo->conta, conta);
    novo->seg = *lista;
    *lista = novo;
}

int conta_parenteses(char *conta) {
    int abre = 0, fecha = 0;
    for (int i = 0; conta[i] != '\0'; i++) {
        if (conta[i] == '(') abre++;
        else if (conta[i] == ')') {
            if (abre == 0) return 0;
            fecha++;
            abre--;
        }
    }
    return abre == 0;
}

int main() {
    int N;
    equacao *lista = NULL;

    do {
        printf("Quantos itens você deseja adicionar? (1 a 10000): ");
        if (scanf("%d", &N) != 1) {
            while (getchar() != '\n');
            N = 0;
        }
    } while (N < 1 || N > MAX_ITENS);

    getchar();

    for (int i = 0; i < N; i++) {
        char item[MAX_CONTA];
        printf("Digite o item %d: ", i + 1);
        fgets(item, MAX_CONTA, stdin);
        item[strcspn(item, "\n")] = '\0';
        adicionar(&lista, item);
    }

    equacao *atual = lista;
    for (int i = 0; atual != NULL; i++, atual = atual->seg) {
        printf("Item %d: %s -> Parênteses balanceados? %s\n", i + 1, atual->conta,
               conta_parenteses(atual->conta) ? "Sim" : "Não");
    }

    while (lista != NULL) {
        equacao *temp = lista;
        lista = lista->seg;
        free(temp);
    }

    return 0;
}
