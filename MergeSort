#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void gerarvetor(int *algo, int n) {
    for (int i = 0; i < n; i++) {
        algo[i] = rand();
    }
}

void merge(int *algo, int l, int m, int r) {
    int n1 = m - l + 1;
    int n2 = r - m;

    int *L = (int *)malloc(n1 * sizeof(int));
    int *R = (int *)malloc(n2 * sizeof(int));

    for (int i = 0; i < n1; i++) L[i] = algo[l + i];
    for (int i = 0; i < n2; i++) R[i] = algo[m + 1 + i];

    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) algo[k++] = L[i++];
        else algo[k++] = R[j++];
    }

    while (i < n1) algo[k++] = L[i++];
    while (j < n2) algo[k++] = R[j++];

    free(L);
    free(R);
}

void mergeSort(int *algo, int l, int r) {
    if (l < r) {
        int m = l + (r - l) / 2;
        mergeSort(algo, l, m);
        mergeSort(algo, m + 1, r);
        merge(algo, l, m, r);
    }
}

int main() {
    int n = 100000;
    int *algo = (int *)malloc(n * sizeof(int));

    gerarvetor(algo, n);

    clock_t start = clock();
    mergeSort(algo, 0, n - 1);
    clock_t end = clock();
    printf("Tempo: %f segundos\n", (double)(end - start) / CLOCKS_PER_SEC);

    free(algo);
    return 0;
}
